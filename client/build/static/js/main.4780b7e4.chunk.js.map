{"version":3,"sources":["images/mygarage.jpg","components/Col/index.js","utils/API.js","pages/SignIn.js","pages/VinForm.js","pages/Schedule.js","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Col","props","size","split","map","join","className","vinNum","axios","get","process","REACT_APP_API_KEY","userData","post","Signup","useState","username","setUsername","password","setPassword","style","background","GaragePic","onSubmit","e","preventDefault","console","log","method","action","Container","minHeight","Row","id","type","placeholder","name","onChange","target","value","Button","onClick","event","API","then","res","catch","err","MyForm","mySubmitHandler","alert","state","myChangeHandler","setState","this","React","Component","Schedule","activeTab","setActiveTab","toggleTab","tab","vehicleSeed","vinNumber","make","model","year","date","Date","now","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","sm","Card","body","inverse","backgroundColor","borderColor","CardTitle","textAlign","CardText","Label","for","Input","vehicle","key","fluid","children","Jumbotron","height","clear","paddingTop","NoMatch","role","aria-label","Example","Navbar","color","light","class","href","src","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4780b7e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mygarage.a6a009cc.jpg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction Col(props) {\n  const size = props.size\n    .split(\" \")\n    .map(size => \"col-\" + size)\n    .join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import axios from \"axios\";\n// import MyForm from \"../garage/VinForm\";\nexport default {\n  getCar: function (vinNum) {\n    return axios.get(\n      \"https://marketcheck-prod.apigee.net/v2/decode/car/\" +\n        vinNum +\n        // \"/specs?api_key=G8wFnLaxeRWBiUvMcHfd3eo7C9KBZQLX\"\n        \"/specs?api_key=\" +\n        process.env.REACT_APP_API_KEY\n    );\n  },\n  saveUser: function(userData) {\n    return axios.post(\"/api/user\", userData);\n  }\n};\n\n","import React, {useState} from \"react\";\r\nimport Col from \"../components/Col\";\r\nimport GaragePic from \"../images/mygarage.jpg\";\r\nimport API from \"../utils/API\"\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Row,\r\n    \r\n  } from \"reactstrap\";\r\n\r\n\r\nexport default function Signup() {\r\nconst [username, setUsername] = useState();\r\nconst [password, setPassword] = useState();\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(\"username is \" + username);\r\n    console.log(\"password is \" + password);\r\n};\r\n\r\nfunction handleFormSubmit(event) {\r\n  event.preventDefault();\r\n  console.log(\"hi\");\r\n  if (username && password) {\r\n    API.saveUser({\r\n      username: username,\r\n      password: password,\r\n    })\r\n      \r\n      .then(res=> console.log(res))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n};\r\n\r\n\r\nreturn (\r\n    <div className = \"signinDiv\" style ={{ background: `url(${GaragePic}) center / cover` }}>\r\n        \r\n       \r\n      <form onSubmit={handleSubmit} method = \"post\" action = \"\">\r\n        <Container style={{ minHeight: \"100vh\"}} className=\"mt-3 px-5\">\r\n          <Row className=\"form-group\">\r\n            <Col id=\"inputCol\" size=\"12\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                onChange={e => setUsername(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Col size=\"12\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-success\" type=\"submit\"\r\n          onClick = {handleFormSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Container>\r\n        \r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport API from \"../utils/API\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { vinNum: \"\" };\n  }\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    alert(\"You are submitting \" + this.state.vinNum);\n    API.getCar(this.state.vinNum).then((res) => {\n      console.log(res);\n    });\n  };\n  myChangeHandler = (event) => {\n    this.setState({ vinNum: event.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.mySubmitHandler}>\n        <h1>Hello </h1>\n        <p>Please enter your VIN, and submit:</p>\n        <input type=\"text\" onChange={this.myChangeHandler} />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\nexport default MyForm;\n","import React, { useState } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Card,\n  Button,\n  CardTitle,\n  CardText,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { Label, Input } from \"reactstrap\";\n\nimport classnames from \"classnames\";\n\nconst Schedule = (props) => {\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  // const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  // const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  const vehicleSeed = [\n    {\n      vinNumber: \"19VDE2E51DE001358\",\n      make: \"Acura\",\n      model: \"ILX\",\n      year: 2013,\n      date: new Date(Date.now()),\n    },\n    {\n      vinNumber: \"2FMHK6DT7EBD0095\",\n      make: \"Ford\",\n      model: \"Flex\",\n      year: 2014,\n      date: new Date(Date.now()),\n    },\n    {\n      vinNumber: \"19VDG2E51DE001358\",\n      make: \"Subaru\",\n      model: \"Forester\",\n      year: 2015,\n      date: new Date(Date.now()),\n    },\n  ];\n\n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"1\" })}\n            onClick={() => {\n              toggleTab(\"1\");\n            }}\n          >\n            Select Vehicle\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"2\" })}\n            onClick={() => {\n              toggleTab(\"2\");\n            }}\n          >\n            Select Services\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"3\" })}\n            onClick={() => {\n              toggleTab(\"3\");\n            }}\n          >\n            Select Time\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"4\" })}\n            onClick={() => {\n              toggleTab(\"4\");\n            }}\n          >\n            Confirm\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"5\">\n              <Card\n                body\n                inverse\n                style={{ backgroundColor: \"teal\", borderColor: \"#333\" }}\n              >\n                <CardTitle style={{ textAlign: \"center\" }}>\n                  <h5>\n                    Please Select a Vehicle to begin scheduling your service\n                    appointment\n                  </h5>\n                </CardTitle>\n                <CardText style={{ textAlign: \"center\" }}>\n                  <Label for=\"exampleSelect\">Select your Vehicle</Label>\n                  <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n                    {vehicleSeed.map((vehicle) => {\n                      return (\n                        <option key={vehicle.vinNumber}>\n                          {vehicle.make} {vehicle.model}\n                        </option>\n                      );\n                    })}\n                  </Input>\n                </CardText>\n                <br></br>\n                <Row>\n                  <Col sm=\"3\">\n                    <Button style={{ textAlign: \"left\" }}> Previous</Button>\n                  </Col>\n                  <Col sm=\"7\"></Col>\n                  <Col sm=\"2\">\n                    <Button style={{ textAlign: \"right\" }}> Next </Button>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n            <Col sm=\"6\">\n              <Card body>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>\n                  With supporting text below as a natural lead-in to additional\n                  content.\n                </CardText>\n                <Button>Go somewhere</Button>\n              </Card>\n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n};\n\nexport default Schedule;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport \"./style.css\";\nimport { Navbar, NavbarBrand} from 'reactstrap';\n// import CarPic from \"../../images/car.jpg\";\n\n\nexport default function Example (props) {\n\n\n \n  return (\n    <div>\n      <Navbar color=\"faded\" light>\n        <h2 class= \"navbar-brand brand-name\">\n        <a href=\"/\"><img class=\"img-responsive2\"       \n        src=\"../../images/car.jpg\"></img> MyGarage </a>\n        </h2>\n      </Navbar>\n    </div>\n    \n  );\n}\n\n \n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport EricForm from \"./pages/SignIn\";\nimport RekhaForm from \"./pages/VinForm\";\nimport AugForm from \"./pages/Schedule\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path={[\"/\", \"/mygarage-kaera\"]}>\n            <EricForm />\n          </Route>\n          <Route exact path={[\"/vehicle\", \"/mygarage-kaera/vehicle\"]}>\n            <RekhaForm />\n          </Route>\n          <Route exact path=\"/schedule\">\n            <AugForm />\n          </Route>\n          <Route exact path=\"/parts\">\n            {/* <AndrewForm /> */}\n          </Route>\n          <Route exact path=\"/vehicle/:id\">\n            {/* <Detail /> */}\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}